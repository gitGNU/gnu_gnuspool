// Advise that net messages have arrived.
// ARRIVED is generated by the Winsock stuff and sent to the main frame
// The others are caught by the relevant child windows

#define	WM_NETMSG_ARRIVED	(WM_USER + 101)
#define	WM_NETMSG_JADD		(WM_USER + 102)
#define	WM_NETMSG_JCHANGE	(WM_USER + 103)
#define	WM_NETMSG_JDEL		(WM_USER + 104)
#define	WM_NETMSG_JREVISED	(WM_USER + 105)
#define	WM_NETMSG_PADD		(WM_USER + 106)
#define	WM_NETMSG_PCHANGE	(WM_USER + 107)
#define	WM_NETMSG_PDEL		(WM_USER + 108)
#define	WM_NETMSG_PREVISED	(WM_USER + 109)
#define WM_NETMSG_NEWCONN	(WM_USER + 110)
#define WM_NETMSG_PROBERCV	(WM_USER + 111)

#define	WM_NETMSG_TICKLE	(WM_USER + 113)

extern	UINT		winsockstart();
extern	void		winsockend();
extern	void		attach_hosts(void);
extern	void	job_sendupdate(const spq *, const spq *, const int);
extern	void	job_message(const netid_t, const spq *, const int, const unsigned long = 0, const unsigned long = 0);
extern	void	ptr_sendupdate(const spptr *, const spptr *, const int);
extern	void	ptr_message(const spptr *, const int);

extern	void	net_recvmsg(WPARAM, LPARAM);
extern	void	net_recvconn(WPARAM, LPARAM);
extern	void	net_recvprobe(WPARAM, LPARAM);
extern	void	reply_probe(void);
extern	void	netsync(void);
extern	void	netshut(void);
