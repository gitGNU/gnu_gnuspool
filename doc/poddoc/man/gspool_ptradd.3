.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "gspool_ptradd 3"
.TH gspool_ptradd 3 "2009-05-30" "GNUspool Release 1" "GNUspool Print Manager"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
gspool_ptradd \- add a new printer
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fB#include <gspool.h>\fR
.PP
\&\fBint gspool_ptradd(const int\fR
\&\fIfd\fR\fB, struct apispptr *\fR\fIptrd\fR\fB)\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The function \fB\f(BIgspool_ptradd()\fB\fR is used to create a printer.
.PP
\&\fIfd\fR is a file descriptor previously returned by \fBgspool_open\fR
.PP
\&\fIptrd\fR is a \f(CW\*(C`struct apispptr\*(C'\fR describing the details of the
printer. It is defined in the file \fBgspool.h\fR.
The fields in \fBstruct apispptr\fR are defined in the documentation for
\fIgspool_ptrread\fR\|(3).
.PP
Only values for the name, device, formtype, description, local flag, the minimun
and maximum job sizes, the network filter flag and the class code are
accepted. All other parameters are ignored. We suggest that you clear
all fields to zero before starting. Future releases with additional
fields will be guaranteed to default to the existing behaviour if the
additional fields are set to zero.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBXt_ptradd\fR returns zero if successful, otherwise an error code will
be returned according to the reason for failure.
Error codes which might be returned are:
.IP "GSPOOL_INVALID_FD" 8
Invalid file descriptor
.IP "GSPOOL_BADWRITE" 8
failure writing to network
.IP "GSPOOL_BADREAD" 8
failure reading from network
.IP "GSPOOL_NOPERM" 8
User does not have permission to add printers
.IP "GSPOOL_BAD_FORM" 8
invalid form type
.SH "EXAMPLE"
.IX Header "EXAMPLE"
An example to add a printer called \f(CW\*(C`hplj1\*(C'\fR on device \f(CW\*(C`/dev/tty12\*(C'\fR with form type \f(CW\*(C`a4\*(C'\fR
.PP
.Vb 2
\& int fd, ret;
\& struct apispptr ptr;
\&
\& fd = gspool_open("myhost", (char *) 0, 0);
\& if (fd < 0) { /* error handling */
\&     ...
\& }
\&
\& memset((void *) &ptr, \*(Aq\e0\*(Aq, sizeof(ptr));
\& ptr.apispp_class = 0xffffffff;
\& ptr.apispp_minsize = ptr.apispp_maxsize = 0;
\& strcpy(ptr.apispp_ptr, "hplj1");
\& strcpy(ptr.apispp_form, "a4");
\& strcpy(ptr.apispp_dev, "tty12");
\& strcpy(ptr.apispp_comment, "My new printer");
\& ret = gspool_ptradd(fd, &ptr);
\& if (ret < 0) { /* error handling */
\&     ...
\& }
\&
\& gspool_close(fd);
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgspool_ptrread\fR\|(3),
\&\fIgspool_ptrdel\fR\|(3),
\&\fIgspool_ptrfind\fR\|(3),
\&\fIgspool_ptrfindslot\fR\|(3),
\&\fIgspool_ptrupd\fR\|(3),
\&\fIgspool_ptrmon\fR\|(3),
\&\fIgspool_ptrop\fR\|(3).
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2009 Free Software Foundation, Inc.
This is free software. You may redistribute copies of it under the
terms of the \s-1GNU\s0 General Public License
<http://www.gnu.org/licenses/gpl.html>.
There is \s-1NO\s0 \s-1WARRANTY\s0, to the extent permitted by law.
.SH "AUTHOR"
.IX Header "AUTHOR"
John M Collins, Xi Software Ltd.
