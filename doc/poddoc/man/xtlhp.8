.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "XTLHP 8"
.TH XTLHP 8 "2009-11-16" "GNUspool Release 1" "GNUspool Print Manager"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
xtlhp \- hpnpf protocol server driver
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBxtlhp\fR
\&\fI\-h hostname\fR
\&\fI\-p port\fR
[ \fI\-d n\fR ]
[ \fI\-f file\fR ]
[ \fI\-c file\fR ]
[ \fI\-l log\fR ]
[ \fI\-b blksize\fR ]
[ \fI\-c community\fR ]
[ \fI\-T timeout\fR ]
[ \fI\-S snmp\fR ]
[ \fI\-D n\fR ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBxtlhp\fR is a terminal server program for use by \fBGNUspool\fR where
the destination is an \s-1HPNPF\s0 server. Alternatively other printer
devices which accept input using \*(L"reverse telnet\*(R" and allow status to
be interrogated via \s-1SNMP\s0 (or other means) may be driven.
.PP
After each block is transmitted, the status of the printer is
interrogated using a supplied control script.
.PP
Versions of \fBxtlhp\fR after 23.6 perform \s-1SNMP\s0 operations directly, rather
than relying on an external program being available.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-h \fIhostname\fR" 8
.IX Item "-h hostname"
This is the host name or \s-1IP\s0 address to be used to access the
printer. In \fBGNUspool\fR setup files, it may be appropriate to
substitute \f(CW$SPOOLDEV\fR or \f(CW$SPOOLPTR\fR here.
.IP "\-p \fIport number\fR" 8
.IX Item "-p port number"
This is the port number or service port name to be used.
.IP "\-f \fIconfigname\fR" 8
.IX Item "-f configname"
This is the location of the definitions file, if not \fIxtsnmpdef\fR in
the \fBGNUspool\fR internal programs directory.
.IP "\-c \fIfile\fR" 8
.IX Item "-c file"
Specifies a control file for obtaining the printer status. See the
\&\s-1CONTROL\s0 \s-1FILE\s0 section below.
.IP "\-l \fIlogfile\fR" 8
.IX Item "-l logfile"
Specify error message destination if not standard error.
.IP "\-b \fIn\fR" 8
.IX Item "-b n"
Specify output block size. \fIn\fR may be a number, or followed by \fBb\fR,
\&\fBk\fR, \fBm\fR or \fBg\fR to denote blocks, kilobytes, megabytes or
gigabytes.
.Sp
Otherwise a default block size of 10K is assumed.
.IP "\-d \fIn\fR" 8
.IX Item "-d n"
Debug. Displays activities on standard error, if \fIn\fR is greater than
zero. Higher values of \fIn\fR will give more output, including tracing
of \s-1SNMP\s0 operations.
.IP "\-D \fIn\fR" 8
.IX Item "-D n"
As for \fB\-d\fR, except that no output is attempted, the control script is
executed once only and the appropriate exit code returned. Use an
argument of zero to just invoke the script and exit.
.IP "\-c \fIname\fR" 8
.IX Item "-c name"
Specify the community in \s-1SNMP\s0 operations. The default is \fBpublic\fR.
.IP "\-T \fItimeout\fR" 8
.IX Item "-T timeout"
Specify the timeout to wait for \s-1SNMP\s0 replies. The default is 1
second, but the value given may be fractional.
.IP "\-S \fIsnmp\fR" 8
.IX Item "-S snmp"
Specify the \s-1SNMP\s0 port name to use, if not \f(CW\*(C`snmp\*(C'\fR.
.SH "CONFIGURATION FILE"
.IX Header "CONFIGURATION FILE"
The configuration file \fIxtsmnpdef\fR provides a series of mnemonics for
the \s-1SNMP\s0 definition of the form:
.PP
.Vb 2
\& system 1.3.6.1.4.1.11.2
\& gdStatusBytes system.3.9.1.1.1
.Ve
.PP
The function of these definitions is to \*(L"macrogenerate\*(R" constructs
which appear in the control file, for example (with appropriate definitions)
.PP
.Vb 1
\& gdStatusPaperOut.0
.Ve
.PP
may be used as an abbreviation for
.PP
.Vb 1
\& 1.3.6.1.4.1.11.2.3.9.1.2.8.0
.Ve
.PP
Previous versions of \fBxtlhp\fR expected quotes around the columns of
the file, but this is no longer expected. The file may define names in
terms of previously-defined names and may redefine names. If a name is
redefined, names already defined using the previous definition are
unaffected.
.SH "CONTROL FILE FORMAT"
.IX Header "CONTROL FILE FORMAT"
The control file consists of a series of command structures involving
options to obtain \s-1SNMP\s0 values, run commands, string and numeric
comparisons and assignments.
.PP
Constructs are based upon the shell, but control names are in
upper case.
.SS "Expressions"
.IX Subsection "Expressions"
.IP "'string'" 8
.IX Item "'string'"
A single-quoted string is taken literally, as per the shell.
.IP "''string''" 8
.IX Item "''string''"
A string enclosed in double-quote characters is subject to name
expansions of macros defined in the configuration file and variables
assigned in the script.
.IP "\s-1SNMPVAR\s0(objid)" 8
.IX Item "SNMPVAR(objid)"
The specified \fIobjid\fR, which may be specified using macros, is
returned, treated as a numeric value.
.IP "\s-1SNMPSTR\s0(objid)" 8
.IX Item "SNMPSTR(objid)"
The specified \fIobjid\fR, which may be specified using macros, is
returned, treated as a string value.
.IP "`string`" 8
.IX Item "`string`"
A back-quoted string is a shell command to execute and the output taken as a
string. Variable names are expanded within the string before execution.
.IP "[string]" 8
.IX Item "[string]"
A string enclosed in square brackets is a shell command to execute,
with the output taken to be a decimal numeric value, the whole
returning a numeric value. Variable names are expanded within the
string before execution.
.IP "{string}" 8
.IX Item "{string}"
A string enclosed in braces is a shell command to execute, with the
output assumed to be a hexadecimal value. (This is required for
\&\fIsnmpinfo\fR\|(8) on \s-1AIX\s0 systems, which returns hexadecimal values).
Variable names are expanded within the string before execution.
.IP "\fInumber\fR" 8
.IX Item "number"
a numeric value.
.IP "\fIname\fR" 8
.IX Item "name"
The value currently assigned to \fIname\fR, if any, is the value of the
expression.
.IP "\s-1LASTVAL\s0" 8
.IX Item "LASTVAL"
The last \s-1SNMP\s0 value obtained (possibly using \f(CW\*(C`DEFINED\*(C'\fR or
\&\f(CW\*(C`UNDEFINED\*(C'\fR) as a numeric or string value.
.SS "Constructs"
.IX Subsection "Constructs"
The following constructs or \*(L"statements\*(R" are used in the control file.
.IP "=" 8
Assignment, as in
.Sp
.Vb 1
\& X = "ABC"
.Ve
.Sp
The value on the right is assigned to the name on the left.
.IP ":=" 8
One time assignment. As per assignment, but the operation is turned into a no-op after the
first execution.
.Sp
For example
.Sp
.Vb 1
\& Host = \`hostname\`
.Ve
.Sp
would be evaluated each time the script is run (after every block),
but
.Sp
.Vb 1
\& Host := \`hostname\`
.Ve
.Sp
would only be evaluated the first time.
.IP "\fIcomparison\fR" 8
.IX Item "comparison"
Comparison of strings is performed with alphabetic operators \fB\s-1LT\s0\fR,
\&\fB\s-1LE\s0\fR, \fB\s-1EQ\s0\fR, \fB\s-1NE\s0\fR, \fB\s-1GE\s0\fR and \fB\s-1GT\s0\fR, and numerics with symbolic
operators \fB<\fR etc.
.IP "\s-1DEFINED\s0(objid)" 8
.IX Item "DEFINED(objid)"
Return a true value if the given object id (which may be specified
using macros) is defined, otherwise false. If the value is defined,
\&\fB\s-1LASTVAL\s0\fR is set to whatever value that was to save further fetches.
.IP "\s-1UNDEFINED\s0(objid)" 8
.IX Item "UNDEFINED(objid)"
As for \fB\s-1DEFINED\s0\fR but the other truth value is returned. \fB\s-1LASTVAL\s0\fR is
still set if the value is defined.
.IP "\s-1ISNUM\s0 \fIvalue\fR" 8
.IX Item "ISNUM value"
Return a true value if the value is a number.
.IP "\s-1ISSTRING\s0 \fIvalue\fR" 8
.IX Item "ISSTRING value"
Return a true value if the value is a string.
.ie n .IP "\s-1AND\s0 \s-1OR\s0 ""&&"" ""||""" 8
.el .IP "\s-1AND\s0 \s-1OR\s0 ``&&'' ``||''" 8
.IX Item "AND OR && ||"
Combine boolean operations in tests. \fB\s-1AND\s0\fR is more binding than
\&\fB\s-1OR\s0\fR. \*(L"Short circuit\*(R" evaluation is performed, so beware of relying
on \fB\s-1LASTVAL\s0\fR.
.IP "\s-1IF\s0 .. \s-1THEN\s0 .. [\s-1ELIF\s0 .. \s-1THEN\s0 ] [\s-1ELSE\s0 .. ] \s-1FI\s0" 8
.IX Item "IF .. THEN .. [ELIF .. THEN ] [ELSE .. ] FI"
Conditional construct with optional \fB\s-1ELIF\s0\fR and \fB\s-1ELSE\s0\fR parts.
.IP "\s-1MSG\s0 \fI\s-1STRING\s0\fR" 8
.IX Item "MSG STRING"
Display message on standard error.
.IP "\s-1EXIT\s0 \fInumber\fR" 8
.IX Item "EXIT number"
Exit \fBxtlhp\fR with specified exit code (from 0 to 255).
.IP "\s-1FLUSH\s0" 8
.IX Item "FLUSH"
Send flush command (ESC-E) to socket.
.SS "\s-1EXAMPLE\s0"
.IX Subsection "EXAMPLE"
This is the control file supplied by default, with definitions for
\&\f(CW\*(C`gdStatusLineState\*(C'\fR etc being provided in the definitions file
supplied.
.PP
Note that if no \fB\s-1EXIT\s0\fR appears, then script file has \*(L"succeeded\*(R" and
output continues.
.PP
.Vb 1
\& # Test the status to see if there are problems
\&
\& IF SNMPVAR(gdStatusLineState.0) != 0
\& THEN
\&        # Look at paper out indication and exit
\&        # message
\&
\&        IF SNMPVAR(gdStatusPaperOut.0) != 0
\&        THEN
\&                MSG \*(AqOut of paper\*(Aq
\&                EXIT 100
\&
\&        # Likewise paper jam
\&
\&        ELIF SNMPVAR(gdStatusPaperJam.0) != 0
\&        THEN
\&                MSG \*(AqOut of paper\*(Aq
\&                EXIT 101
\&
\&        # Likewise toner low
\&
\&        ELIF SNMPVAR(gdStatusTonerLow.0) != 0
\&        THEN
\&                MSG \*(AqOut of toner\*(Aq
\&                EXIT 102
\&
\&        #  Give up just give general message
\&
\&        ELSE
\&                MSG SNMPSTR(npSysStatusMessage.0)
\&                EXIT 103
\&        FI
\& FI
.Ve
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
\&\fBxtlhp\fR generates any appropriate diagnostics on standard error.
.SH "EXIT CODES"
.IX Header "EXIT CODES"
Normal termination is denoted by an exit code of zero.
.PP
Most of the other exit codes are determined by the control file and
can be adjusted by the user as required.
.IP "1" 4
.IX Item "1"
Usage error, invalid option etc.
.IP "2" 4
.IX Item "2"
Device error, cannot connect socket etc.
.IP "4" 4
.IX Item "4"
System error.
.IP "5" 4
.IX Item "5"
\&\s-1SNMP\s0 error.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIxilp\fR\|(8),
\&\fIxtelnet\fR\|(8),
\&\fIxtftp\fR\|(8),
\&\fIxtlpc\fR\|(8).
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2009 Free Software Foundation, Inc.
This is free software. You may redistribute copies of it under the
terms of the \s-1GNU\s0 General Public License
<http://www.gnu.org/licenses/gpl.html>.
There is \s-1NO\s0 \s-1WARRANTY\s0, to the extent permitted by law.
.SH "AUTHOR"
.IX Header "AUTHOR"
John M Collins, Xi Software Ltd.
